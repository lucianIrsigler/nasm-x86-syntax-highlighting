{
    "Nasm":[
        {
        "prefix":"NASMhelloworld",
        "body":[
            "section .bss\n\nsection .data\n\tvar1 db \"Hello world\",0ah,0\n\nsection .text\n\tglobal _main\n\textern _printf\n\n_main:\n\tpush var1\n\tcall _printf\n\tadd esp,4\n\tret"],
        "description:":"Hello world program"
        },
        {
        "prefix":"NASMforloop",
        "body":[
        ";Simple for loop program. It prints out the numbers from 1->12",
        "SECTION .data",
        "\tstartLoopMessage: db \"Starting loop\",0ah, 0",
        "\tendLoopMessage: db \"Ending loop\", 0ah,0",
        "\tformat: db \"%d\", 0ah,0",
        "\tdata: db 0",
        "SECTION .texte",
        "\tglobal _main ",
        "\textern _printf\n",
        "_main:",
        "\tpush startLoopMessage",
        "\tcall _printf",
        "\tadd esp,4",
        "\tmov cx, 12\n",
        "startloop:",
        "\tinc byte [data]",
        "\tcmp cx, 0",
        "\tjz endofloop",
        "\tpush cx\n",
        "loopy:",
        "\tmov eax,[data]",
        "\tpush eax",
        "\tpush format",
        "\tcall _printf",
        "\tadd esp,8",
        "\tpop cx",
        "\tdec cx",
        "\tjmp startloop\n",
        "endofloop:",
        "\tpush endLoopMessage",
        "\tcall _printf",
        "\tadd esp,4",
        "\tret"
        ],
        "description:":"Basic for loop in nasm x86"
        },
        {
            
        "prefix": "NASMifloop",
        "body": [
        "SECTION .data",
        "\tstartMessage: db \"Starting program\",0ah,0",
        "\tprompt db \"Enter number:\",0ah,0",
        "\tlessThan db \"Less than 5\",0ah,0",
        "\tmoreThan db \"More than 5\",0ah,0",
        "\tequal: db \"Equal to 5\",0ah,0",
        "\tformatin: db \"%d\",0,",
        "\tformatout db \"%d\",10,0",
        "\tinteger1: times 4 db 0 ; 32-bits integer = 4 bytes\n",
        "SECTION .text",
        "\tglobal _main ",
        "\textern _scanf   ",
        "\textern _printf\n",
        "_main:",
        "\tpush startMessage   ; prints start message",
        "\tcall _printf",
        "\tadd esp,4\t\n",
        "\tpush prompt",
        "\tcall _printf",
        "\tadd esp,4\n",
        "\tpush integer1, ; pushes the address of integer1",
        "\tpush formatin,",
        "\tcall _scanf,   ; Calls scanf",
        "\tadd esp,8,\t",
        "\tmov eax, dword [integer1]   ;Moves eax into the address of eax\t\n",
        "\tcmp eax,5   ; compares the value of eax to 5",
        "\tje Equal",
        "\tjg More",
        "\tjl Less\n",
        "Equal:",
        "\tpush equal",
        "\tcall _printf",
        "\tadd esp,4",
        "\tjmp End ;If this is not here, then the More and Less functions would get executed\n",
        "More:",
        "\tpush moreThan",
        "\tcall _printf",
        "\tadd esp,4",
        "\tjmp End ;If this is not here, then the Less function would get executed\n",
        "Less:",
        "\tpush lessThan",
        "\tcall _printf",
        "\tadd esp,4",
        "\tjmp End\n",
        "End:",
        "\tpush endMessage",
        "\tcall _printf",
        "\tadd esp,4",
        "\tret"
        ],
        "description": "Basic if-else conditional in nasm x86"
        },
        {
            "prefix":"NASMmacro",
            "body":[
                "%define param(x,y)(x+y)\n",
                "section .bss\n",
                "section .data",
                "\tformatout : db \"%d\"\n",
                "section .text",
                "\tglobal _main",
                "\textern _printf\n",
                "_main:",
                "\tmov eax,param(2,3)",
                "\tpush eax",
                "\tpush formatout",
                "\tcall _printf",
                "\tadd esp,8",
                "\tret"
            ],
            "description":"Basic macro usage"
        },
        {
            "prefix":"NASMuserinput",
            "body":[
                ";Asks for number and outputs number",
                "SECTION .data",
                "\tstart db \"Enter number:\",0",
                "\tyouEntered db \"You entered:\",0",
                "\tformatin: db \"%d\",0",
                "\tformatout db \"%d\",10,0",
                "\tinteger1: times 4 db 0 ; 32-bits integer = 4 bytes\n",
                "SECTION .texte",
                "\tglobal _main",
                "\textern _printf",
                "\textern _scanf\n",
                "_main:",
                "\tpush start",
                "\tcall _printf",
                "\tadd esp,4",
                "\tpush integer1",
                "\tpush formatin",
                "\tcall _scanf",
                "\tadd esp,8",
                "\tpush youEntered",
                "\tcall _printf",
                "\tadd esp,4",
                "\tmov eax, dword [integer1]",
                "\tpush eax",
                "\tpush formatout",
                "\tcall _printf",
                "\tadd esp,8",
                "\tret"
            ]
        },
        {
            "prefix":"NASMforloop2",
            "body":[
                ";Asks user for input and loops to that number",
                "SECTION .data",
                "\tstart db \"Enter number:\",0",
                "\tformatin: db \"%d\",0",
                "\tformatout db \"%d\",10,0",
                "\tinteger1: times 4 db 0 ; 32-bits integer = 4 bytes\n",
                "SECTION .texte",
                "\tglobal _main ",
                "\textern _printf",
                "\textern _scanf\n",
                "_main:",
                "\tpush start",
                "\tcall _printf",
                "\tadd esp,4",
                "\tpush integer1",
                "\tpush formatin",
                "\tcall _scanf",
                "\tadd esp,8",
                "\tmov ebx, dword [integer1]",
                "\tmov ecx,1",
                "loopstart:",
                "\tcmp ecx,ebx",
                "\tjz end  ",
                "\tpush ecx",
                "loop:",
                "\tpush ecx",
                "\tpush formatout",
                "\tcall _printf",
                "\tadd esp,8",
                "\tpop ecx",
                "\tinc ecx",
                "\tjmp loopstart",
                "end:",
                "\tret"
            ]
        },
        {
        "prefix":"NASMstruc",
        "body":[
            ";example struc",
            "struc mytype",
            "\t.long:\t\tresd\t1",
            "\t.word:\t\tresw\t1",
            "\t.byte:\t\tresb\t1",
            "\t.str:\t\tresb\t32",
            "endstruc"
        ]
        }
]

    
}